{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x0AaAfB7C3FDF2fa1E2c28627B3165C2a1f0A99c0",
    "txHash": "0x529f9972b2cac3195b60ba277720b708bf09c561bfe92948681d0116dd78b0eb",
    "deployTransaction": {
      "hash": "0x529f9972b2cac3195b60ba277720b708bf09c561bfe92948681d0116dd78b0eb",
      "type": 0,
      "accessList": null,
      "blockHash": "0x9ed2360782954216acab0dfecaf3cb3264f0a9a00be4a35043387a404be4f35e",
      "blockNumber": 12431212,
      "transactionIndex": 2,
      "confirmations": 2,
      "from": "0xf1E099b51B37669d3bB9AB60B8F9C9D0156E2aF0",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x3b9aca00"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x076330"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 2,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0x145cf56a3cbe8ddaf4e65888fa27dc67d64a3bbb6e7c637f170d0060bdf7b44e",
      "s": "0x5c5acd20dfc800aae71293a55e7eaebf16d130a060de2d44dde9dc599a6d1610",
      "v": 169097,
      "creates": "0x0AaAfB7C3FDF2fa1E2c28627B3165C2a1f0A99c0",
      "chainId": 84531
    }
  },
  "proxies": [
    {
      "address": "0x61d87e7D861c2D3fE290093D5D785F1D11a8918D",
      "txHash": "0x637f1e30c94ec6c3886fecb59099aa3a4a8870551d1cf0f58f0eed88fca3cce4",
      "kind": "transparent"
    },
    {
      "address": "0x3a48CC26aF23E109d14478Ba33B4E0eb62625a2C",
      "txHash": "0x46d70c1285261817462f0e4cc8a81821ef8700cbc83220e8a4db067597a9ccba",
      "kind": "transparent"
    }
  ],
  "impls": {
    "5b817e274c46709dac60a9beb9c160c980deb601137ced88efaced7cc0f108e3": {
      "address": "0x853e95761B8306E4Ca6ea3e2521cF69F3D380759",
      "txHash": "0x26b1c3f37faac632a31db06cdc75020c47819bd63f7967c8c7f925f457fc1ce5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "CCIPReceiver",
            "label": "i_router",
            "type": "t_address",
            "src": "@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol:12"
          },
          {
            "contract": "CrossChainCollector",
            "label": "s_router",
            "type": "t_contract(IRouterClient)184",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:23"
          },
          {
            "contract": "CrossChainCollector",
            "label": "s_lastReceivedMessageId",
            "type": "t_bytes32",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:25"
          },
          {
            "contract": "CrossChainCollector",
            "label": "s_lastReceivedText",
            "type": "t_string_storage",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:26"
          },
          {
            "contract": "CrossChainCollector",
            "label": "masterCollector",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:28"
          },
          {
            "contract": "CrossChainCollector",
            "label": "stakingThales",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:29"
          },
          {
            "contract": "CrossChainCollector",
            "label": "masterCollectorChain",
            "type": "t_uint64",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:30"
          },
          {
            "contract": "CrossChainCollector",
            "label": "supportedChains",
            "type": "t_mapping(t_uint256,t_uint64)",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:31"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainIndex",
            "type": "t_mapping(t_uint64,t_uint256)",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:32"
          },
          {
            "contract": "CrossChainCollector",
            "label": "collectorForChain",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:33"
          },
          {
            "contract": "CrossChainCollector",
            "label": "lastPeriodForChain",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:35"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainStakedAmountInPeriod",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:36"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainEscrowedAmountInPeriod",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:37"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainBaseRewardsInPeriod",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:38"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainExtraRewardsInPeriod",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:39"
          },
          {
            "contract": "CrossChainCollector",
            "label": "calculatedStakedAmountForPeriod",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:41"
          },
          {
            "contract": "CrossChainCollector",
            "label": "calculatedEscrowedAmountForPeriod",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:42"
          },
          {
            "contract": "CrossChainCollector",
            "label": "numOfActiveCollectors",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:44"
          },
          {
            "contract": "CrossChainCollector",
            "label": "period",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:45"
          },
          {
            "contract": "CrossChainCollector",
            "label": "baseRewardsPerPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:46"
          },
          {
            "contract": "CrossChainCollector",
            "label": "extraRewardsPerPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:47"
          },
          {
            "contract": "CrossChainCollector",
            "label": "collectedResultsPerPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:48"
          },
          {
            "contract": "CrossChainCollector",
            "label": "testingPhase",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:50"
          },
          {
            "contract": "CrossChainCollector",
            "label": "lastPeriodBeforeTesting",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:51"
          }
        ],
        "types": {
          "t_contract(IRouterClient)184": {
            "label": "contract IRouterClient"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_uint256,t_uint64)": {
            "label": "mapping(uint256 => uint64)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint64,t_uint256)": {
            "label": "mapping(uint64 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "9e359a10a6d3cfd364517af48a72a3f541df83ae7f48d82e1b71a2a0c8c75bcf": {
      "address": "0xDa2c052F4b6518eE75362ccAeec62ce2AA46Bb33",
      "txHash": "0x7896eb6f4b5ba90e937e9bf56b9d560cd72f187a5f521433645f693051dd5532",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "CCIPReceiver",
            "label": "i_router",
            "type": "t_address",
            "src": "@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol:12"
          },
          {
            "contract": "CrossChainCollector",
            "label": "s_router",
            "type": "t_contract(IRouterClient)184",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:23"
          },
          {
            "contract": "CrossChainCollector",
            "label": "s_lastReceivedMessageId",
            "type": "t_bytes32",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:25"
          },
          {
            "contract": "CrossChainCollector",
            "label": "s_lastReceivedText",
            "type": "t_string_storage",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:26"
          },
          {
            "contract": "CrossChainCollector",
            "label": "masterCollector",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:28"
          },
          {
            "contract": "CrossChainCollector",
            "label": "stakingThales",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:29"
          },
          {
            "contract": "CrossChainCollector",
            "label": "masterCollectorChain",
            "type": "t_uint64",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:30"
          },
          {
            "contract": "CrossChainCollector",
            "label": "supportedChains",
            "type": "t_mapping(t_uint256,t_uint64)",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:31"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainIndex",
            "type": "t_mapping(t_uint64,t_uint256)",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:32"
          },
          {
            "contract": "CrossChainCollector",
            "label": "collectorForChain",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:33"
          },
          {
            "contract": "CrossChainCollector",
            "label": "lastPeriodForChain",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:35"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainStakedAmountInPeriod",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:36"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainEscrowedAmountInPeriod",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:37"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainBaseRewardsInPeriod",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:38"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainExtraRewardsInPeriod",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:39"
          },
          {
            "contract": "CrossChainCollector",
            "label": "calculatedStakedAmountForPeriod",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:41"
          },
          {
            "contract": "CrossChainCollector",
            "label": "calculatedEscrowedAmountForPeriod",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:42"
          },
          {
            "contract": "CrossChainCollector",
            "label": "numOfActiveCollectors",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:44"
          },
          {
            "contract": "CrossChainCollector",
            "label": "period",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:45"
          },
          {
            "contract": "CrossChainCollector",
            "label": "baseRewardsPerPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:46"
          },
          {
            "contract": "CrossChainCollector",
            "label": "extraRewardsPerPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:47"
          },
          {
            "contract": "CrossChainCollector",
            "label": "collectedResultsPerPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:48"
          },
          {
            "contract": "CrossChainCollector",
            "label": "testingPhase",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:50"
          },
          {
            "contract": "CrossChainCollector",
            "label": "lastPeriodBeforeTesting",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:51"
          }
        ],
        "types": {
          "t_contract(IRouterClient)184": {
            "label": "contract IRouterClient"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_uint256,t_uint64)": {
            "label": "mapping(uint256 => uint64)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint64,t_uint256)": {
            "label": "mapping(uint64 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "8d3ca036f59eb07ec4a9ff8fa35e4eb67c304a7adfcf72db3dda0194e9fb6b01": {
      "address": "0x2B6795A326f9afC36F56f72259c7E2E798aA4CD0",
      "txHash": "0xefe8acf13568517fc0cbbbf1d616de83849b8ffb7ff8e523dbb64241a4155744",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "CCIPReceiver",
            "label": "i_router",
            "type": "t_address",
            "src": "@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol:12"
          },
          {
            "contract": "CrossChainCollector",
            "label": "s_router",
            "type": "t_contract(IRouterClient)184",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:23"
          },
          {
            "contract": "CrossChainCollector",
            "label": "s_lastReceivedMessageId",
            "type": "t_bytes32",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:25"
          },
          {
            "contract": "CrossChainCollector",
            "label": "s_lastReceivedText",
            "type": "t_string_storage",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:26"
          },
          {
            "contract": "CrossChainCollector",
            "label": "masterCollector",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:28"
          },
          {
            "contract": "CrossChainCollector",
            "label": "stakingThales",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:29"
          },
          {
            "contract": "CrossChainCollector",
            "label": "masterCollectorChain",
            "type": "t_uint64",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:30"
          },
          {
            "contract": "CrossChainCollector",
            "label": "supportedChains",
            "type": "t_mapping(t_uint256,t_uint64)",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:31"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainIndex",
            "type": "t_mapping(t_uint64,t_uint256)",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:32"
          },
          {
            "contract": "CrossChainCollector",
            "label": "collectorForChain",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:33"
          },
          {
            "contract": "CrossChainCollector",
            "label": "lastPeriodForChain",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:35"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainStakedAmountInPeriod",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:36"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainEscrowedAmountInPeriod",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:37"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainBaseRewardsInPeriod",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:38"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainExtraRewardsInPeriod",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:39"
          },
          {
            "contract": "CrossChainCollector",
            "label": "calculatedStakedAmountForPeriod",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:41"
          },
          {
            "contract": "CrossChainCollector",
            "label": "calculatedEscrowedAmountForPeriod",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:42"
          },
          {
            "contract": "CrossChainCollector",
            "label": "numOfActiveCollectors",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:44"
          },
          {
            "contract": "CrossChainCollector",
            "label": "period",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:45"
          },
          {
            "contract": "CrossChainCollector",
            "label": "baseRewardsPerPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:46"
          },
          {
            "contract": "CrossChainCollector",
            "label": "extraRewardsPerPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:47"
          },
          {
            "contract": "CrossChainCollector",
            "label": "collectedResultsPerPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:48"
          },
          {
            "contract": "CrossChainCollector",
            "label": "testingPhase",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:50"
          },
          {
            "contract": "CrossChainCollector",
            "label": "lastPeriodBeforeTesting",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:51"
          }
        ],
        "types": {
          "t_contract(IRouterClient)184": {
            "label": "contract IRouterClient"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_uint256,t_uint64)": {
            "label": "mapping(uint256 => uint64)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint64,t_uint256)": {
            "label": "mapping(uint64 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "1d9b315f1bef765996b38df2f43daf1e476e87a34afc3bdc6a8f39f83e37bf3d": {
      "address": "0x36328be745E828a17881b333248cfE956182695c",
      "txHash": "0xec5878dd3dc112360874702a2ebbdaa2f50c4db9664aeb44c17bd3d740dbc30b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "CCIPReceiver",
            "label": "i_router",
            "type": "t_address",
            "src": "@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol:12"
          },
          {
            "contract": "CrossChainCollector",
            "label": "s_router",
            "type": "t_contract(IRouterClient)413",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:23"
          },
          {
            "contract": "CrossChainCollector",
            "label": "s_lastReceivedMessageId",
            "type": "t_bytes32",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:25"
          },
          {
            "contract": "CrossChainCollector",
            "label": "s_lastReceivedText",
            "type": "t_string_storage",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:26"
          },
          {
            "contract": "CrossChainCollector",
            "label": "masterCollector",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:28"
          },
          {
            "contract": "CrossChainCollector",
            "label": "stakingThales",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:29"
          },
          {
            "contract": "CrossChainCollector",
            "label": "masterCollectorChain",
            "type": "t_uint64",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:30"
          },
          {
            "contract": "CrossChainCollector",
            "label": "supportedChains",
            "type": "t_mapping(t_uint256,t_uint64)",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:31"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainIndex",
            "type": "t_mapping(t_uint64,t_uint256)",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:32"
          },
          {
            "contract": "CrossChainCollector",
            "label": "collectorForChain",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:33"
          },
          {
            "contract": "CrossChainCollector",
            "label": "lastPeriodForChain",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:35"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainStakedAmountInPeriod",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:36"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainEscrowedAmountInPeriod",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:37"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainBaseRewardsInPeriod",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:38"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainExtraRewardsInPeriod",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:39"
          },
          {
            "contract": "CrossChainCollector",
            "label": "calculatedStakedAmountForPeriod",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:41"
          },
          {
            "contract": "CrossChainCollector",
            "label": "calculatedEscrowedAmountForPeriod",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:42"
          },
          {
            "contract": "CrossChainCollector",
            "label": "numOfActiveCollectors",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:44"
          },
          {
            "contract": "CrossChainCollector",
            "label": "period",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:45"
          },
          {
            "contract": "CrossChainCollector",
            "label": "baseRewardsPerPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:46"
          },
          {
            "contract": "CrossChainCollector",
            "label": "extraRewardsPerPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:47"
          },
          {
            "contract": "CrossChainCollector",
            "label": "collectedResultsPerPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:48"
          },
          {
            "contract": "CrossChainCollector",
            "label": "testingPhase",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:50"
          },
          {
            "contract": "CrossChainCollector",
            "label": "lastPeriodBeforeTesting",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:51"
          }
        ],
        "types": {
          "t_contract(IRouterClient)413": {
            "label": "contract IRouterClient"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_uint256,t_uint64)": {
            "label": "mapping(uint256 => uint64)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint64,t_uint256)": {
            "label": "mapping(uint64 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "eb2bdf57fe5be1a640786fe0fc0346cb4a415b275453b7284acc4dd3aa1b5bbe": {
      "address": "0x1a730524836Ba2d120637e976575A8d02037c781",
      "txHash": "0x1e38f4eecc0592b194ce140fa784d83086a3e8f2f22012bdefc255509ac1852d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "CCIPReceiver",
            "label": "i_router",
            "type": "t_address",
            "src": "@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol:12"
          },
          {
            "contract": "CrossChainCollector",
            "label": "s_router",
            "type": "t_contract(IRouterClient)184",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:23"
          },
          {
            "contract": "CrossChainCollector",
            "label": "s_lastReceivedMessageId",
            "type": "t_bytes32",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:25"
          },
          {
            "contract": "CrossChainCollector",
            "label": "s_lastReceivedText",
            "type": "t_string_storage",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:26"
          },
          {
            "contract": "CrossChainCollector",
            "label": "masterCollector",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:28"
          },
          {
            "contract": "CrossChainCollector",
            "label": "stakingThales",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:29"
          },
          {
            "contract": "CrossChainCollector",
            "label": "masterCollectorChain",
            "type": "t_uint64",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:30"
          },
          {
            "contract": "CrossChainCollector",
            "label": "supportedChains",
            "type": "t_mapping(t_uint256,t_uint64)",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:31"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainIndex",
            "type": "t_mapping(t_uint64,t_uint256)",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:32"
          },
          {
            "contract": "CrossChainCollector",
            "label": "collectorForChain",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:33"
          },
          {
            "contract": "CrossChainCollector",
            "label": "lastPeriodForChain",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:35"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainStakedAmountInPeriod",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:36"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainEscrowedAmountInPeriod",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:37"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainBaseRewardsInPeriod",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:38"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainExtraRewardsInPeriod",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:39"
          },
          {
            "contract": "CrossChainCollector",
            "label": "calculatedStakedAmountForPeriod",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:41"
          },
          {
            "contract": "CrossChainCollector",
            "label": "calculatedEscrowedAmountForPeriod",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:42"
          },
          {
            "contract": "CrossChainCollector",
            "label": "numOfActiveCollectors",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:44"
          },
          {
            "contract": "CrossChainCollector",
            "label": "period",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:45"
          },
          {
            "contract": "CrossChainCollector",
            "label": "baseRewardsPerPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:46"
          },
          {
            "contract": "CrossChainCollector",
            "label": "extraRewardsPerPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:47"
          },
          {
            "contract": "CrossChainCollector",
            "label": "collectedResultsPerPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:48"
          },
          {
            "contract": "CrossChainCollector",
            "label": "testingPhase",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:50"
          },
          {
            "contract": "CrossChainCollector",
            "label": "lastPeriodBeforeTesting",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:51"
          }
        ],
        "types": {
          "t_contract(IRouterClient)184": {
            "label": "contract IRouterClient"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_uint256,t_uint64)": {
            "label": "mapping(uint256 => uint64)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint64,t_uint256)": {
            "label": "mapping(uint64 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "3dca81d664a027cdf4510a5adad4491c3dfece6e6f3d007869af2f76d1a21864": {
      "address": "0x1d23D33DF52f4125353fF32599E81b43f186712B",
      "txHash": "0x6cea897897bf1d2bf53740e89446fcb48bbc1a1dfa73813671749e443bf19233",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "CCIPReceiver",
            "label": "i_router",
            "type": "t_address",
            "src": "@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol:12"
          },
          {
            "contract": "CrossChainCollector",
            "label": "s_router",
            "type": "t_contract(IRouterClient)184",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:23"
          },
          {
            "contract": "CrossChainCollector",
            "label": "s_lastReceivedMessageId",
            "type": "t_bytes32",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:25"
          },
          {
            "contract": "CrossChainCollector",
            "label": "s_lastReceivedText",
            "type": "t_string_storage",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:26"
          },
          {
            "contract": "CrossChainCollector",
            "label": "masterCollector",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:28"
          },
          {
            "contract": "CrossChainCollector",
            "label": "stakingThales",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:29"
          },
          {
            "contract": "CrossChainCollector",
            "label": "masterCollectorChain",
            "type": "t_uint64",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:30"
          },
          {
            "contract": "CrossChainCollector",
            "label": "supportedChains",
            "type": "t_mapping(t_uint256,t_uint64)",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:31"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainIndex",
            "type": "t_mapping(t_uint64,t_uint256)",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:32"
          },
          {
            "contract": "CrossChainCollector",
            "label": "collectorForChain",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:33"
          },
          {
            "contract": "CrossChainCollector",
            "label": "lastPeriodForChain",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:35"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainStakedAmountInPeriod",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:36"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainEscrowedAmountInPeriod",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:37"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainBaseRewardsInPeriod",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:38"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainExtraRewardsInPeriod",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:39"
          },
          {
            "contract": "CrossChainCollector",
            "label": "calculatedStakedAmountForPeriod",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:41"
          },
          {
            "contract": "CrossChainCollector",
            "label": "calculatedEscrowedAmountForPeriod",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:42"
          },
          {
            "contract": "CrossChainCollector",
            "label": "numOfActiveCollectors",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:44"
          },
          {
            "contract": "CrossChainCollector",
            "label": "period",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:45"
          },
          {
            "contract": "CrossChainCollector",
            "label": "baseRewardsPerPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:46"
          },
          {
            "contract": "CrossChainCollector",
            "label": "extraRewardsPerPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:47"
          },
          {
            "contract": "CrossChainCollector",
            "label": "collectedResultsPerPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:48"
          },
          {
            "contract": "CrossChainCollector",
            "label": "testingPhase",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:50"
          },
          {
            "contract": "CrossChainCollector",
            "label": "lastPeriodBeforeTesting",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:51"
          },
          {
            "contract": "CrossChainCollector",
            "label": "numOfMessagesReceived",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:53"
          },
          {
            "contract": "CrossChainCollector",
            "label": "messagesReceivedFromChainSelector",
            "type": "t_mapping(t_uint256,t_uint64)",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:54"
          },
          {
            "contract": "CrossChainCollector",
            "label": "messagesReceived",
            "type": "t_mapping(t_uint256,t_bytes_storage)",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:55"
          },
          {
            "contract": "CrossChainCollector",
            "label": "readyToBroadcast",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/CrosChainCollector.sol:56"
          }
        ],
        "types": {
          "t_contract(IRouterClient)184": {
            "label": "contract IRouterClient"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_uint256,t_uint64)": {
            "label": "mapping(uint256 => uint64)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint64,t_uint256)": {
            "label": "mapping(uint64 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bytes_storage)": {
            "label": "mapping(uint256 => bytes)"
          },
          "t_bytes_storage": {
            "label": "bytes"
          }
        }
      }
    },
    "8ee481a8b2ed60be1d9a96a3890adea34e74f228c6f209e941c8dd3463cf66f6": {
      "address": "0x1a41CE7DbF0aE2A2749717CB6EE2Fa80fbd90d48",
      "txHash": "0xa33254b848cf520dfc73d977df0e95f3d4ed8a2551b9833dbff2c1427cdbb046",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "CCIPReceiverProxy",
            "label": "i_router",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/CCIPReceiverProxy.sol:12"
          },
          {
            "contract": "CrossChainCollector",
            "label": "s_router",
            "type": "t_contract(IRouterClient)64",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:26"
          },
          {
            "contract": "CrossChainCollector",
            "label": "stakingThales",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:27"
          },
          {
            "contract": "CrossChainCollector",
            "label": "masterCollector",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:29"
          },
          {
            "contract": "CrossChainCollector",
            "label": "masterCollectorChain",
            "type": "t_uint64",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:30"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainSelector",
            "type": "t_mapping(t_uint256,t_uint64)",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:32"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainSelectorIndex",
            "type": "t_mapping(t_uint64,t_uint256)",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:33"
          },
          {
            "contract": "CrossChainCollector",
            "label": "collectorAddress",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:34"
          },
          {
            "contract": "CrossChainCollector",
            "label": "lastPeriodForChain",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:36"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainStakedAmountInPeriod",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:37"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainEscrowedAmountInPeriod",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:38"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainBaseRewardsInPeriod",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:39"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainExtraRewardsInPeriod",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:40"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainBonusPointsInPeriod",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:41"
          },
          {
            "contract": "CrossChainCollector",
            "label": "calculatedStakedAmountForPeriod",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:43"
          },
          {
            "contract": "CrossChainCollector",
            "label": "calculatedEscrowedAmountForPeriod",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:44"
          },
          {
            "contract": "CrossChainCollector",
            "label": "calculatedBonusPointsForPeriod",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:45"
          },
          {
            "contract": "CrossChainCollector",
            "label": "messagesReceivedFromChainSelector",
            "type": "t_mapping(t_uint256,t_uint64)",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:47"
          },
          {
            "contract": "CrossChainCollector",
            "label": "messagesReceived",
            "type": "t_mapping(t_uint256,t_bytes_storage)",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:48"
          },
          {
            "contract": "CrossChainCollector",
            "label": "numOfMessagesReceived",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:49"
          },
          {
            "contract": "CrossChainCollector",
            "label": "numOfActiveCollectors",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:51"
          },
          {
            "contract": "CrossChainCollector",
            "label": "period",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:52"
          },
          {
            "contract": "CrossChainCollector",
            "label": "baseRewardsPerPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:53"
          },
          {
            "contract": "CrossChainCollector",
            "label": "extraRewardsPerPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:54"
          },
          {
            "contract": "CrossChainCollector",
            "label": "collectedResultsPerPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:55"
          },
          {
            "contract": "CrossChainCollector",
            "label": "lastPeriodBeforeTesting",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:56"
          },
          {
            "contract": "CrossChainCollector",
            "label": "readyToBroadcast",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:58"
          },
          {
            "contract": "CrossChainCollector",
            "label": "testingPhase",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:59"
          }
        ],
        "types": {
          "t_contract(IRouterClient)64": {
            "label": "contract IRouterClient"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_uint256,t_uint64)": {
            "label": "mapping(uint256 => uint64)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint64,t_uint256)": {
            "label": "mapping(uint64 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_bytes_storage)": {
            "label": "mapping(uint256 => bytes)"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    }
  }
}
